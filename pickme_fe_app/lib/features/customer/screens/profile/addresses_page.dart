import 'package:flutter/material.dart';

class AddressesPage extends StatelessWidget {
  const AddressesPage({super.key});

  @override
  Widget build(BuildContext context) {
    final TextEditingController addressController = TextEditingController();
    final TextEditingController wardController = TextEditingController();
    final TextEditingController districtController = TextEditingController();
    final TextEditingController cityController = TextEditingController();

    return Scaffold(
      backgroundColor: const Color(0xffF7F8FA),
      appBar: AppBar(
        backgroundColor: Colors.white,
        title: const Text(
          'ƒê·ªãa ch·ªâ',
          style: TextStyle(
            color: Colors.black,
            fontWeight: FontWeight.w600,
            fontSize: 18,
          ),
        ),
        centerTitle: true,
        elevation: 0,
        iconTheme: const IconThemeData(color: Colors.black),
      ),
      body: SafeArea(
        child: SingleChildScrollView(
          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 16),
          child: Container(
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(12),
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const Text(
                  "ƒê·ªãa ch·ªâ",
                  style: TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    color: Colors.black,
                  ),
                ),
                const SizedBox(height: 16),

                // Address
                _buildTextField(
                  label: "ƒê·ªãa ch·ªâ c·ªßa b·∫°n *",
                  hint: "Nh·∫≠p ƒë·ªãa ch·ªâ c·ªßa b·∫°n",
                  controller: addressController,
                ),
                const SizedBox(height: 12),

                //Ph∆∞·ªùng / x√£
                _buildTextField(
                  label: "Ph∆∞·ªùng/X√£ *",
                  hint: "Nh·∫≠p Ph∆∞·ªùng ho·∫∑c X√£ c·ªßa b·∫°n",
                  controller: wardController,
                ),
                const SizedBox(height: 12),

                // Qu·∫≠n / huy·ªán
                _buildTextField(
                  label: "Qu·∫≠n/Huy·ªán *",
                  hint: "Nh·∫≠p Qu·∫≠n ho·∫∑c Huy·ªán c·ªßa b·∫°n",
                  controller: districtController,
                ),
                const SizedBox(height: 12),

                // T·ªânh / th√†nh ph·ªë
                _buildTextField(
                  label: "T·ªânh/Th√†nh Ph·ªë *",
                  hint: "Nh·∫≠p T·ªânh ho·∫∑c Th√†nh ph·ªë c·ªßa b·∫°n",
                  controller: cityController,
                ),
                const SizedBox(height: 24),

                // Confirm button
                SizedBox(
                  width: double.infinity,
                  child: ElevatedButton(
                    onPressed: () {
                      // üëâ TODO: x·ª≠ l√Ω l∆∞u ƒë·ªãa ch·ªâ
                    },
                    style: ElevatedButton.styleFrom(
                      backgroundColor: const Color(0xffF59E0B),
                      padding: const EdgeInsets.symmetric(vertical: 14),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                    ),
                    child: const Text(
                      'X√°c nh·∫≠n',
                      style: TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.w600,
                        color: Colors.white,
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildTextField({
    required String label,
    required String hint,
    required TextEditingController controller,
  }) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          label,
          style: const TextStyle(
            fontSize: 14,
            fontWeight: FontWeight.w500,
            color: Colors.black,
          ),
        ),
        TextField(
          controller: controller,
          decoration: InputDecoration(
            hintText: hint,
            hintStyle: const TextStyle(color: Colors.grey),
            enabledBorder: const UnderlineInputBorder(
              borderSide: BorderSide(color: Colors.grey),
            ),
            focusedBorder: const UnderlineInputBorder(
              borderSide: BorderSide(color: Colors.black),
            ),
            contentPadding: const EdgeInsets.symmetric(vertical: 8),
          ),
        ),
      ],
    );
  }
}
